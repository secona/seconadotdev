---
import { TypeIcon } from "astro-feather";

interface Props {
  name: string;
  description: string;
  tags: string[];
  links?: { icon: typeof TypeIcon, href: string, label: string }[],
}

const { name, description, tags, links } = Astro.props;
---

<div id="container">
  <div id="titlebar">
    <h1>{name}</h1>
    <div id="links">
      {links?.map((link) => (
        <a href={link.href} target="_blank" rel="noopener noreferrer" aria-label={link.label}>
          <link.icon />
        </a>
      ))}
    </div>
  </div>
  <div id="content">
    <p>{description}</p>
    <div class="tags">
      {tags.map((tag) => (
        <p class="tags-content">{tag}</p>
      ))}
    </div>
  </div>
</div>

<style lang="scss">
@use '../styles/mixins' as *;

div#container {
  box-shadow: var(--hard-shadow);
  border-radius: var(--rounded);

  & > div#titlebar {
    display: flex;
    justify-content: space-between;
    padding: 0.5rem 1rem;

    background-color: var(--orange-400);

    border-color: black;
    border-width: 2px;
    border-radius: var(--rounded) var(--rounded) 0 0;
    
    & > div#links {
      display: flex;
      justify-content: end;
    }
  }

  & > div#content {
    padding: 1rem 1.5rem 1.5rem 1.5rem;

    background-color: white;

    border-bottom-left-radius: var(--rounded);
    border-bottom-right-radius: var(--rounded);
    border-width: 0 2px 2px 2px;
    border-color: black;

    & > div.tags {
      display: flex;
      flex-wrap: wrap;
      gap: 1rem;
      margin-top: 1rem;

      & > .tags-content {
        @include font-size(sm);
        border: 2px solid black;
        border-radius: var(--rounded);
        padding: 0.25rem 1rem;
        background-color: var(--red-300);
      }
    }
  }
}
</style>
