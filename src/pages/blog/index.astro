---
import { getCollection } from "astro:content";
import NavbarLayout from "../../layouts/NavbarLayout.astro";
import Card from "../../components/Card.astro";

const blogs = await getCollection("blogs");
const sortedBlogs = blogs
  .filter((blog) => blog.data.show)
  .sort((a, b) => new Date(b.data.publishedAt).getTime() - new Date(a.data.publishedAt).getTime());
---

<NavbarLayout pageTitle="Vito Secona's Blog">
  <section id="blog">
    <div class="blog-sidebar">
      <Card title="My Blog">
        <p>
          Here are some of my blogs! I mostly write about Rust and my journey
          in the software engineering world. Feel free to explore my thoughts
          on programming, systems development, and technology.
        </p>
        <div class="blog-stats">
          <p class="stats-text">
            <strong>{sortedBlogs.length}</strong> {blogs.length === 1 ? 'post' : 'posts'} published
          </p>
        </div>
      </Card>
    </div>
    <div class="blog-list">
      {
        sortedBlogs.map((blog) => (
          <Card disableTitlebar>
            <div class="blog-post">
              <h1 class="blog-title">
                <a href={`/blog/${blog.id}`} target="_blank" rel="noopener noreferrer">
                  {blog.data.title}
                </a>
              </h1>
              <div class="blog-context">
                <time>
                  {new Date(blog.data.publishedAt).toLocaleDateString("en-US", {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                  })}
                </time>
                {blog.data.tags.map((tag) => (
                  <span> &mdash; <a href="#" class="tag">#{tag}</a></span>
                ))}
              </div>
              <p class="blog-description">{blog.data.description}</p>
            </div>
          </Card>
        ))
      }
    </div>
  </section>
</NavbarLayout>

<style lang="scss">
@use '../../styles/mixins' as *;

.blog-post {
  .blog-title {
    @include font-size(xl);
    margin-bottom: 0.25rem;

    a {
      color: var(--blue-600);
      line-height: 1.2;
    }
  }

  .blog-context {
    @include font-size(sm);
    color: var(--gray-500);
    margin-bottom: 0.5rem;
  }

  .blog-description {
    line-height: 1.6;
    margin-bottom: 1rem;
  }
}

.blog-stats {
  margin-top: 1.5rem;
  padding-top: 1rem;
  border-top: 1px solid var(--gray-400);

  .stats-text {
    @include font-size(sm);
    color: var(--gray-500);
  }
}

.tags {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;

  .tag {
    @include font-size(sm);
    border: 2px solid black;
    border-radius: var(--rounded);
    padding: 0.25rem 0.5rem;
    background-color: var(--yellow-300);
    font-weight: 500;
  }
}

#blog {
  display: grid;
  grid-template-columns: 1fr;
  min-height: 100vh;

  @media (min-width: 1280px) {
    grid-template-columns: 1fr 2fr;
  }

  .blog-sidebar {
    background-color: var(--yellow-400);
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    max-height: 100vh;
    top: 0;

    border-bottom-width: 2px;
    border-style: solid;
    border-color: black;

    @media (max-width: 1280px) {
      border-right: none;
    }

    @media (min-width: 1280px) {
      position: sticky;
      border-right: 2px solid black;
    }
  }

  .blog-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  & > :not(:last-child) {
    border-inline-start-width: 0px;
    border-inline-end-width: 2px;
    border-color: black;
  }

  & > * {
    padding-top: 5rem;
    padding-bottom: 5rem;
    padding-left: 1.5rem;
    padding-right: 1.5rem;

    @media (min-width: 1280px) {
      padding-top: 6rem;
      padding-bottom: 6rem;
      padding-left: 5rem;
      padding-right: 5rem;
    }
    @media (min-width: 640px) {
      padding-left: 4rem;
      padding-right: 4rem;
    }
  }
}
</style>
